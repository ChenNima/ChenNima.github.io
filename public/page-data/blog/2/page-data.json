{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/blog/2","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"excerpt":"用户的权限管理对每个项目来说都至关重要。不同的业务场景决定了不同的权限管理需求，不同的技术栈也有不同的解决方案：如果你在写一个Ruby On Rails应用，那你可能会选择cancan， 如果你正在使用K8S，那你很可能需要与K8S的RBAC系统打交道。那如果你面对一个非常复杂的业务，需要实现极为灵活的权限配置，并且同时对接多个服务怎么办呢？谷歌的一致性全球授权系统Zanzibar以及其开源实现Ory/Keto或许可以帮到你。 Zanzibar 简介 Google Zanzibar是谷歌201…","id":"4bf70036-2819-5d86-9caa-d367cb1d5b37","frontmatter":{"title":"Zanzibar与Ory/Keto: 权限管理服务简介","date":"May 07, 2021","path":"/keto-permission-manager-introduction"}}},{"node":{"excerpt":"在上一篇文章中从零搭建AWS网络(一): VPC与Internet Gateway中，我们学习了如何从零开始搭建一套最简单的AWS网络并通过Internet Gateway来向公网提供服务。在文章的最后我留下了两个问题： 没有详细配置Security Group等安全措施，安全性无法得到保障 实例直接配置了公网ip地址，缺少安全性和可扩展性，占用宝贵的ip资源 在今天的文章里，我们就来通过添加ELB，NAT Gateway等设施来解决这些问题。…","id":"38c46b97-e60e-50cd-a9cc-554c7a9245dd","frontmatter":{"title":"从零搭建AWS网络(二): ELB与NAT Gateway","date":"April 19, 2021","path":"/aws-vpc-elb-and-nat-gateway"}}},{"node":{"excerpt":"AWS(Amazon Web Services)是由亚马逊公司所创建的云计算平台，向个人、企业和政府提供一系列包括信息技术基础架构和应用的服务，如存储、数据库、计算、机器学习等等。使用AWS部署云服务可以免去传统私有服务期运维的各种麻烦，可以方便地快速上线业务。但在AWS上部署服务，网络结构搭建是绕不开的话题，很多同学刚接触AWS的时候就被一堆诸如VPC, Internet Gateway, Nat Gateway的概念绕晕了，最后在AWS的console…","id":"5e8bdc95-95e7-5c9e-aa42-cef5605e4cfc","frontmatter":{"title":"从零搭建AWS网络(一): VPC与Internet Gateway","date":"December 18, 2020","path":"/aws-vpc-internet-gateway"}}},{"node":{"excerpt":"当我们把应用部署在集群中的时候可以很方便地使用例如Istio的工具控制集群中的流量，例如熔断，灰度部署，蓝绿部署等功能。虽然当我们的集群部署在docker容器中但又没有Kubernetes环境时和等工具仍然可以用来帮助控制集群流量，但是简单的服务熔断/下线等操作可以借助工具快速地实现，而不用侵入应用代码或者部署额外的架构。 TL;DR 假设我们部署一个简单的docker容器服务Memcahced, 将服务暴露的端口转发至本地的端口 容器memcached的docker子网ip…","id":"6d2ad53e-666f-5a16-b9b7-6526c916676a","frontmatter":{"title":"使用iptables熔断docker container中的服务","date":"April 22, 2020","path":"/blackout-docker-container-with-iptables"}}},{"node":{"excerpt":"在React中，无论是否使用了Redux或其他状态管理框架，都无法避免在组件中处理异步请求。在不使用的情况下，其典型的流程为： 在中发起异步请求 调用在state中维护请求的loading状态，并根据此状态渲染加载动画 在异步请求resolve的时候调用将数据放到state中，并将loading状态置为false…","id":"f5ca00a9-4b29-5a0b-8d9a-7f7cc34820b4","frontmatter":{"title":"在React中将异步请求抽象为高阶组件(Typescript)","date":"September 09, 2019","path":"/with-async-data"}}}]}},"pageContext":{"limit":6,"skip":6,"numPages":2,"currentPage":2}},"staticQueryHashes":["1176552510","3649515864","63159454"]}