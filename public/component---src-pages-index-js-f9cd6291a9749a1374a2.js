(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{255:function(e,t,a){"use strict";a.r(t);var n=a(259),r=a(0),l=a.n(r),i=a(72),o=a(253),c=a(251),d=a(252);t.default=Object(d.a)(function(){var e=n.data.allMarkdownRemark.edges;return l.a.createElement(l.a.Fragment,null,l.a.createElement(c.a,{title:"首页"}),l.a.createElement("div",{className:"d-flex justify-content-between"},l.a.createElement("h1",{className:"m-0"},"最新博客"),l.a.createElement(i.a,{to:"/blog",className:"align-self-end"},"更多>>")),l.a.createElement("hr",null),e.filter(function(e){return e.node.frontmatter.title.length>0}).map(function(e){var t=e.node;return l.a.createElement("div",{key:t.id},l.a.createElement(o.a,{blog:t}))}))})},259:function(e){e.exports=JSON.parse('{"data":{"allMarkdownRemark":{"edges":[{"node":{"excerpt":"在React中，无论是否使用了Redux或其他状态管理框架，都无法避免在组件中处理异步请求。在不使用的情况下，其典型的流程为： 在中发起异步请求 调用在state中维护请求的loading状态，并根据此状态渲染加载动画 在异步请求resolve的时候调用将数据放到state中，并将loading状态置为false…","id":"16737ff3-c7ce-50b8-bd56-bb52dc8417a2","frontmatter":{"title":"在React中将异步请求抽象为高阶组件(Typescript)","date":"September 09, 2019","path":"/with-async-data"}}},{"node":{"excerpt":"Kick off your project with this default boilerplate. This starter ships with the main Gatsby configuration files you might need to get up and running blazing fast with the blazing fast app generator for React. Have another more specific idea? You may…","id":"c950ba72-96db-52f0-9296-db4e315fc9af","frontmatter":{"title":"你好，世界","date":"September 03, 2019","path":"/hello-world2"}}}]}}}')}}]);
//# sourceMappingURL=component---src-pages-index-js-f9cd6291a9749a1374a2.js.map